<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Produits extends \App\Entity\Produits implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Produits' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Produits' . "\0" . 'nomProduit', '' . "\0" . 'App\\Entity\\Produits' . "\0" . 'Abbreviation', '' . "\0" . 'App\\Entity\\Produits' . "\0" . 'dateEntrer', '' . "\0" . 'App\\Entity\\Produits' . "\0" . 'mouvements', '' . "\0" . 'App\\Entity\\Produits' . "\0" . 'categories', '' . "\0" . 'App\\Entity\\Produits' . "\0" . 'situations'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Produits' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Produits' . "\0" . 'nomProduit', '' . "\0" . 'App\\Entity\\Produits' . "\0" . 'Abbreviation', '' . "\0" . 'App\\Entity\\Produits' . "\0" . 'dateEntrer', '' . "\0" . 'App\\Entity\\Produits' . "\0" . 'mouvements', '' . "\0" . 'App\\Entity\\Produits' . "\0" . 'categories', '' . "\0" . 'App\\Entity\\Produits' . "\0" . 'situations'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Produits $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getNomProduit(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNomProduit', []);

        return parent::getNomProduit();
    }

    /**
     * {@inheritDoc}
     */
    public function setNomProduit(string $NomProduit): \App\Entity\Produits
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNomProduit', [$NomProduit]);

        return parent::setNomProduit($NomProduit);
    }

    /**
     * {@inheritDoc}
     */
    public function getAbbreviation(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAbbreviation', []);

        return parent::getAbbreviation();
    }

    /**
     * {@inheritDoc}
     */
    public function setAbbreviation(string $Abbreviation): \App\Entity\Produits
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAbbreviation', [$Abbreviation]);

        return parent::setAbbreviation($Abbreviation);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateEntrer(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateEntrer', []);

        return parent::getDateEntrer();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateEntrer(\DateTimeInterface $dateEntrer): \App\Entity\Produits
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateEntrer', [$dateEntrer]);

        return parent::setDateEntrer($dateEntrer);
    }

    /**
     * {@inheritDoc}
     */
    public function getMouvements(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMouvements', []);

        return parent::getMouvements();
    }

    /**
     * {@inheritDoc}
     */
    public function addMouvement(\App\Entity\Mouvement $mouvement): \App\Entity\Produits
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMouvement', [$mouvement]);

        return parent::addMouvement($mouvement);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMouvement(\App\Entity\Mouvement $mouvement): \App\Entity\Produits
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMouvement', [$mouvement]);

        return parent::removeMouvement($mouvement);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategories(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategories', []);

        return parent::getCategories();
    }

    /**
     * {@inheritDoc}
     */
    public function addCategory(\App\Entity\Categorie $category): \App\Entity\Produits
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCategory', [$category]);

        return parent::addCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCategory(\App\Entity\Categorie $category): \App\Entity\Produits
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCategory', [$category]);

        return parent::removeCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function getSituations(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSituations', []);

        return parent::getSituations();
    }

    /**
     * {@inheritDoc}
     */
    public function addSituation(\App\Entity\Situation $situation): \App\Entity\Produits
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSituation', [$situation]);

        return parent::addSituation($situation);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSituation(\App\Entity\Situation $situation): \App\Entity\Produits
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSituation', [$situation]);

        return parent::removeSituation($situation);
    }

}
